//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.11

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "products")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id_product: i32,
    pub name: String,
    #[sea_orm(unique)]
    pub bar_code: String,
    pub stock: i32,
    pub max_stock: i32,
    pub is_active: bool,
    #[sea_orm(column_type = "Decimal(Some((10, 2)))")]
    pub unit_price: Decimal,
    #[sea_orm(column_type = "Text")]
    pub description: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::refound_details::Entity")]
    RefoundDetails,
    #[sea_orm(has_many = "super::sales_details::Entity")]
    SalesDetails,
}

impl Related<super::refound_details::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::RefoundDetails.def()
    }
}

impl Related<super::sales_details::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::SalesDetails.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
